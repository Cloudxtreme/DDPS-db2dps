#
# THIS FILE IS BEEING SOURCED BY /bin/sh AND IS NOT GENERIC BUT
# SPECIFIC TO ONE HOST.
#
# Additional files to be put on backup - this host only
EXTRA="./var/CPbackup/postgres-backup/ ./usr/local/ ./var/backups/postgres ./opt/ ./home/"

#
# Keep this number of old backup files locally in /var/CPbackups
BACKLOG=10

#
# On errors, send mail to RCPT
RCPT="fwsupport@i2.dk"

# Things to do before backup, i.e stopping ace-database
pre_backup() {
	do_common;
	do_pre_backup
}

# Things to do after backup, i.e starting ace-database
post_backup() {
	do_common;
	do_post_backup
}

#
# On 'rt' much has to be done, to backup 'rt' (mysql, files etc).
# So the configuration file has been extented with some vars and
# functions below.
#
##################################################################
#
# Vars -- carefull ! may clubber vars in script !
#
# HOME may/may not be set to something else than default. Find the
# top
HOME=`awk -F: '$1 == "root" { print $6 }' /etc/passwd`

# Place generic restore info here
RESTORE_INFO_DIR=${BACKUP_HOME}/RESTORE_INFORMATION

##################################################################
#
# Functions
#

function mk_readme_files() {

	logit "Creating restore information file README ... "

	#
	# OS specific: Ubuntu
	#
	/usr/bin/dpkg --get-selections >  ${RESTORE_INFO_DIR}/pkg_info
	/usr/bin/apt-mark showauto     > ${RESTORE_INFO_DIR}/pkgs_auto.lst
	/usr/bin/apt-mark showmanual   > ${RESTORE_INFO_DIR}/pkgs_manual.lst
	/sbin/sysctl -a 	>	${RESTORE_INFO_DIR}/sysctl-a 2>&1
	/usr/bin/lshw		>	${RESTORE_INFO_DIR}/lshw.txt 2>/dev/null
	if [ -f /etc/motd ]; then
		cat /etc/motd		>	${RESTORE_INFO_DIR}/motd
	else
		echo "" > ${RESTORE_INFO_DIR}/motd
	fi

	if [ ! -d ${RESTORE_INFO_DIR}/apt ]; then
		mkdir ${RESTORE_INFO_DIR}/apt
	fi
	dpkg --get-selections > ${RESTORE_INFO_DIR}/apt/package.list
	cp -R /etc/apt/sources.list* ${RESTORE_INFO_DIR}/apt/
	apt-key exportall > ${RESTORE_INFO_DIR}/apt/repo.keys

	cat << EOF > ${RESTORE_INFO_DIR}/apt/apt-restore.sh
#!/bin/bash
#
# You may have to change the following line
#
cd ${RESTORE_INFO_DIR}/apt

apt-key add repo.keys
cp -R sources.list* /etc/apt/
apt-get update
apt-get install dselect
dselect update
dpkg --set-selections < package.list
apt-cache dumpavail > temp_avail
dpkg --merge-avail temp_avail
rm temp_avail
apt-get dselect-upgrade -y

EOF

	# DATE=`export LANG=en_DK.utf8; export LC_ALL=en_DK.utf8; date "+%A den %d %B %Y kl. %H:%M"`
	DATE=`export LANG=en_GB.utf8; export LC_ALL=en_GB.utf8; date "+%A %d %B %Y at %H:%M %Z"`

	ROOT_FS=`df|awk '$NF == "/" { gsub (/[0-9]/,""); print $1 }'`

	printf "%65s\n" "${DATE}"	>	${RESTORE_INFO_DIR}/README
	cat << EOF					>>	${RESTORE_INFO_DIR}/README

This documentation is compiled  as part of the  backup procedure.
The latest version of this text is stored in
	${RESTORE_INFO_DIR}
on the machine ${FQDN}.

If you are reading this file chances are that this machine has to
be restored after a major crash. Well, such is life.

First,  A word of WARNING:  The next check list does not claim to
be exhaustive,  error free, user friendly, or complete.  There is
most probably something that I forgot to put in it or things that 
have been modified on the system since this list was made.  
So please make use of discretion while using it.

The README is accompanied with theese documents:
 1  ../<hostname>.<uname>.<date>.<time>.tgz ...
    The OS backup archive(s). Use the latest.
 3  lshw.txt
    Output from the command lshw describing the hardware.
 4  motd
    copy of /etc/motd usually a description of the hosts purpose.
	but only if found.
 5  sysctl-a
    Output from sysctl -a -- the system configuration.
 6  archive_list
    List of all backup archives.
 7  status
    Status of the latest backup (good or bad).
 8  pkg_info
    List of all installed packages, usefull for restore.
 9  pkgs_manual.lst
    Manual installed packages, usefull for restore.
10  pkgs_auto.lst
    Automatic installed packages, usefull for restore.
11  The directory ${RESTORE_INFO_DIR}/apt with everything
    required for restoring all packages installed with apt-get ... 
    on the failed system, including a ready made restore script.

Hardware
The failed system was running on this hardware - see lshw.txt for
details.
-----------------------------------------------------------------
hardware:  `uname -m`
`free -m`
`grep MemTotal /proc/meminfo`
-----------------------------------------------------------------

Operating system information (/etc/lsb-release)
-----------------------------------------------------------------
`cat /etc/lsb-release`
-----------------------------------------------------------------

Disk information below:
-----------------------------------------------------------------
df -hi:

`df -hi`
-----------------------------------------------------------------
fdisk -l $ROOT_FS:

`fdisk -l $ROOT_FS`
-----------------------------------------------------------------

The list of all installed packages (pkg_info) has  been  compiled
with the commands
	/usr/bin/dpkg --get-selections > ${RESTORE_INFO_DIR}/pkg_info
	/usr/bin/apt-mark showauto     > ${RESTORE_INFO_DIR}/pkgs_auto.lst
	/usr/bin/apt-mark showmanual   > ${RESTORE_INFO_DIR}/pkgs_manual.lst

Restore system information
--------------------------
 1  Install the same version of the OS, with the same patch level.
    See the wiki on how specific packages was installed, if any.

 2  Package re-installation:

    The file pkg_info can be used to re-install all packages this
    way:

        dpkg --set-selections < pkg_info
	    apt-get -y update
	    apt-get dselect-upgrade
        apt-get autoremove

    Alternatively, the packages can be retored with the commands

        apt-mark auto \$(cat pkgs_auto.lst)
        apt-mark manual \$(cat pkgs_manual.lst)

    It doesn't make any difference.

3	Copy the latest (good) OS backup  to the new host and extract
    the files in /var/tmp.
	Move the configuration files to their place(s),  while taking
	care not to clubber e.g. device name information in /etc

4   Reboot in order to see if there are any OS specific problems.
    A known problem with Linux/Ubuntu is the automatic change of
	netcard devicename from e.g. eth0 to eht1.
	Change NAME="eth1" to eth0 in
        /etc/udev/rules.d/70-persistent-net.rules
	and delete any lines containing eth0. Next edit
        /etc/network/interfaces
	and replace eth1 with eth0. Then run the two commands
	    udevadm trigger
		/etc/init.d/networking restart

Restore gitlab
--------------

TODO: Everything from /etc/gitlab is on the tar archive, while
git data is stored on a daily backup below /var/opt/gitlab/backups/
by gitlab-rake gitlab:backup:create DIRECTORY=daily

For a restore, see https://docs.gitlab.com/omnibus/settings/backups.html
and https://github.com/gitlabhq/gitlabhq/blob/master/doc/raketasks/backup_restore.md

EOF
}

function do_post_backup() {
	:
}

function do_common() {
	if [ ! -d "${RESTORE_INFO_DIR}" ]; then
		mkdir "${RESTORE_INFO_DIR}"
	fi
}

function do_pre_backup() {

	# backup libreplan postgres databases *without shuting down tomcat first*

	# Location to place backups.
	# /var/opt/gitlab/backups/

	# https://github.com/gitlabhq/gitlabhq/blob/master/doc/raketasks/backup_restore.md
	echo /usr/bin/gitlab-rake gitlab:backup:create DIRECTORY=daily
	
	mk_readme_files

	# return $ERRORS
}


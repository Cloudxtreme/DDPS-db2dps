
    my @hostlist = split(' ', $hostlist);
    #------------------------------------------------------------
    my $ok_to_connect = 0;
    my $exabgp_restarted = 0;
    my %exabgp_lstart = ();
    foreach my $host (@hostlist) {
        $exabgp_lstart{$host} = "init"; 
    }
    #------------------------------------------------------------

        foreach my $host (@hostlist) {
            my $sshuser         = $data{$host}{'sshuser'};          $sshuser =~ tr/\"//d;
            my $identity_file   = $data{$host}{'identity_file'};    $identity_file =~ tr/\"//d;
            my $public_key      = $data{$host}{'public_key'};       $public_key =~ tr/\"//d;
            my $filtertype      = $data{$host}{'filtertype'};       $filtertype =~ tr/\"//d;
            my $exabgp_pipe     = $data{$host}{'exabgp_pipe'};      $exabgp_pipe =~ tr/\"//d;
            my $datadir         = $data{'general'}{'datadir'};

            #------------------------------------------------------------

            my $ssh2 = Net::SSH2->new(timeout => 100);
            if (! $ssh2->connect($host)) {
                logit("ssh connection to '$host' failed");
                $ok_to_connect = 0;
            }
            else {
                if (! $ssh2->auth_publickey($sshuser,$public_key,$identity_file) ) {
                    logit("public/private key authentication for $sshuser to $host failed with: $!");
                    logit("Check local and remote modes for keys and directory including authorized_keys config etc");
                    logit("Notice some versions of Net::SSH2 may ONLY support rsa");
                    $ok_to_connect = 0;
                }
                else {
                    #
                    # host up and accepts connections
                    #
                    # Get PID of process exabgp (ps) remove blanks (tr) and get start time in seconds (stat)
                    #my $cmd = "stat -c%X /proc/`ps -C exabgp -o pid=|tr -d ' '`";
                    # Use GNU date to calculate start time in seconds
                    #my $cmd = 'echo $(export TZ=UTC0 LC_ALL=C; date -d "$(ps -o lstart= -C exabgp )" +%s)'

                    # get start time of exabgp process as a text string, if it changes then do something
                    # as new processes do not start earlier than old ones
                    my $cmd = "ps -C exabgp -o lstart=";

                    my $chan = $ssh2->channel();
                    $chan->blocking(0);
                    $chan->shell();

                    my $len = 0;
                    my $buf = 0;

                    $chan->write("$cmd\n");
                    select(undef,undef,undef,0.2);

                    my $result = "";
                    $result = $result . $buf while defined ($len = $chan->read($buf,512));

                    $chan->close;

                    chomp($result);

                    if ($result eq '') {
                        logit("$host: service exabgp down");
                        $ok_to_connect = 0;
                        #
                        # do not attempt to contact host for update
                        #
                    }
                    else {
                        if ($exabgp_lstart{$host} eq $result) {
                            logit("$host: service exabgp running ok");
                            # $sql_query = $newrules;
                            $ok_to_connect = 1;
                            $exabgp_restarted = 0;
                        } 
                        else {
                            logit("$host: service exabgp restarted: '$exabgp_lstart{$host}' != '$result'");
                            $exabgp_lstart{$host} = "$result";
                            # $sql_query = $all_rules;
                            $ok_to_connect = 1;
                            $exabgp_restarted = 1;
                        }
                    } # end do update
                }
            }
            #------------------------------------------------------------
            logit("ok to do something ok_to_connect = $ok_to_connect, exabgp_restarted = $exabgp_restarted");
        } # foreach ... 
